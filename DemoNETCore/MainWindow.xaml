<Window x:Class="DemoNETCore.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:cf="clr-namespace:ColorFontPickerWPF;assembly=ColorFontPickerWPF"
        mc:Ignorable="d"
        Title="MainWindow" Height="669" Width="1188" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <cf:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
    </Window.Resources>
    <Grid x:Name="MainGrid" Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <GroupBox Header="Dialog">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Label x:Name="PreviewLabel" Width="200" Height="20" BorderBrush="Silver" BorderThickness="1"/>
                <Button x:Name="ColorDialogButton" Content="ShowColorDialog" Width="200" Click="ColorDialogButton_Click" Grid.Row="1" Margin="0,5,0,0"/>
                <TextBlock x:Name="PreviewTextBlock" Text="PreviewText" Grid.Column="1" HorizontalAlignment="Center"/>
                <Button x:Name="FontDialogButton" Content="ShowFontDialog"  Width="200" Click="FontDialogButton_Click" Grid.Column="1" Grid.Row="1" Margin="0,5,0,0"/>
            </Grid>
        </GroupBox>
        <GroupBox Header="Popup" Grid.Row="1">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="5">
                    <TextBlock Text="ColorText:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                    <ComboBox x:Name="ColorTextCombo" SelectedIndex="0" VerticalContentAlignment="Center">
                        <ComboBoxItem Content="None"/>
                        <ComboBoxItem Content="RGB"/>
                        <ComboBoxItem Content="HEX"/>
                        <ComboBoxItem Content="HSL"/>
                    </ComboBox>
                </StackPanel>
                <cf:ColorPickerPopup Grid.Row="1" x:Name="colorPickerPopup" SelectedColor="{Binding PopupSelectedColor}"
                                     Command="{Binding PopupColorChangeCommand}" ValueChanged="colorPickerPopup_ValueChanged">
                    <cf:ColorPickerPopup.Style>
                        <Style TargetType="cf:ColorPickerPopup">
                            <Setter Property="ColorText" Value="None"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=ColorTextCombo,Path=SelectedIndex}" Value="1">
                                    <Setter Property="ColorText" Value="RGB"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=ColorTextCombo,Path=SelectedIndex}" Value="2">
                                    <Setter Property="ColorText" Value="HEX"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=ColorTextCombo,Path=SelectedIndex}" Value="3">
                                    <Setter Property="ColorText" Value="HSL"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </cf:ColorPickerPopup.Style>
                </cf:ColorPickerPopup>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Column="1" Margin="5">
                    <TextBlock Text="FontText:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                    <TextBox x:Name="fontPopupText"  Margin="5" MinWidth="100" />
                    <TextBlock Text="'{fontsize}'will be replaced with the real size." VerticalAlignment="Center" Opacity="0.5" FontSize="10"/>
                </StackPanel>
                <cf:FontPickerPopup x:Name="fontPickerPopup" Grid.Column="1" Grid.Row="1" FontText="{Binding ElementName=fontPopupText,Path=Text}"
                                    ValueChanged="fontPickerPopup_ValueChanged" SelectedFont="{Binding PopupSelectedFont}"/>
            </Grid>
        </GroupBox>
        <GroupBox  Header="UserControl" Grid.Row="2" Margin="0,10,0,0">
            <Grid>
                <Grid.Resources>
                    <Style TargetType="GroupBox">
                        <Setter Property="Margin" Value="10"/>
                    </Style>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <GroupBox Header="ColorPickerControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <CheckBox x:Name="ColorCellsCheck" Content="WithoutColorCells" Margin="10"/>
                        <Label Background="{Binding ElementName=colorPicker,Path=SelectedColor,Converter={StaticResource ColorToBrushConverter}}" Margin="10"  Grid.Row="1"/>
                        <cf:ColorPickerControl x:Name="colorPicker" Grid.Row="2" Width="Auto" Height="Auto" WithoutColorCells="{Binding ElementName=ColorCellsCheck,Path=IsChecked}" 
                                                ValueChanged="colorPicker_ValueChanged" 
                                                SelectedColor="{Binding SelectedColor}" 
                                                Command="{Binding ColorChangeCommand}"/>
                    </Grid>
                </GroupBox>
                <GroupBox Header="FontPickerControl" Grid.Column="1">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Horizontal"  Margin="10">
                            <CheckBox x:Name="DecorationCheck" Content="WithoutDecoration" Margin="0,0,10,0" />
                            <CheckBox x:Name="PreviewCheck" Content="WithoutPreviewRow"/>
                        </StackPanel>
                        <StackPanel Grid.Row="1" Height="60" HorizontalAlignment="Center"  Orientation="Horizontal">
                            <TextBlock Text="Test" Margin="5" VerticalAlignment="Center"
                               FontFamily="{Binding SelectedFont.FontFamily,ElementName=fontPicker}"
                               FontStretch="{Binding Path=SelectedFont.FontTypeFace.Stretch,ElementName=fontPicker}"
                               FontWeight="{Binding Path=SelectedFont.FontTypeFace.Weight,ElementName=fontPicker}"
                               FontStyle="{Binding Path=SelectedFont.FontTypeFace.Style,ElementName=fontPicker}"
                               FontSize="{Binding Path=SelectedFont.FontSize,ElementName=fontPicker}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=SelectedFont.TextDecorationType,ElementName=fontPicker}" Value="OverLine">
                                                <Setter Property="TextDecorations" Value="OverLine"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=SelectedFont.TextDecorationType,ElementName=fontPicker}" Value="Strikethrough">
                                                <Setter Property="TextDecorations" Value="Strikethrough"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=SelectedFont.TextDecorationType,ElementName=fontPicker}" Value="Baseline">
                                                <Setter Property="TextDecorations" Value="Baseline"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=SelectedFont.TextDecorationType,ElementName=fontPicker}" Value="Underline">
                                                <Setter Property="TextDecorations" Value="Underline"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <TextBlock Text="TestBindExtProperty" VerticalAlignment="Center" Margin="5"
                                       cf:FontExtension.FontData="{Binding SelectedFont,ElementName=fontPicker,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock x:Name="BindExtProText" Text="TestBindExt2" VerticalAlignment="Center" Margin="5"
                                       cf:FontExtension.FontData="{Binding SelectedFont}"/>
                        </StackPanel>
                        <cf:FontPickerControl x:Name="fontPicker" Grid.Row="2"  Width="Auto" Height="Auto" WithoutDecorations="{Binding ElementName=DecorationCheck,Path=IsChecked}" 
                                              WithoutPreviewRow="{Binding ElementName=PreviewCheck,Path=IsChecked}" ValueChanged="fontPicker_ValueChanged"
                                              Command="{Binding FontChangeCommand}" 
                                              SelectedFont="{Binding SelectedFont}"/>
                    </Grid>
                </GroupBox>
            </Grid>
        </GroupBox>
        <Button Content="SetDefault" Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Top" Click="Button_Click"/>
    </Grid>
</Window>
